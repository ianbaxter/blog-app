{"version":3,"sources":["components/Post.js","history.js","styles/theme.js","styles/ThemeContext.js","components/Header.js","components/Footer.js","components/Options.js","components/OptionPrivate.js","components/NewPost.js","components/StatusMessage.js","components/ErrorBoundary.js","pages/Home.js","components/EditPost.js","components/PostCollabs.js","utils/time.js","components/Comment.js","pages/PostPage.js","pages/Login.js","pages/Register.js","pages/User.js","App.js","index.js"],"names":["Post","post","setPosts","useState","meta","favs","postFavs","setPostFavs","favsUserIds","postFavsUserIds","setPostFavsUserIds","favouritingPost","userId","sessionStorage","getItem","toggleFavourite","e","preventDefault","userIdIndex","indexOf","splice","push","data","axios","put","process","_id","then","res","catch","err","console","error","handleFilterClick","filter","filterType","params","tag","username","get","history","postsReversed","reverse","className","title","body","tags","length","map","index","key","onClick","collaborators","collaborator","Date","date","toLocaleString","day","month","year","hour","minute","timeZone","includes","aria-label","xmlns","viewBox","fill","width","height","d","isPrivate","createBrowserHistory","primaryBackgroundColor","theme","light","dark","secondaryBackgroundColor","inputBackgroundColor","primaryTextColor","secondaryTextColor","placeholderTextColor","borderColor","highlightColor","cardShadow","curvedCheckbox","ThemeToggleContext","React","createContext","toggle","Wrapper","styled","div","MyThemeProvider","children","storedMode","localStorage","mode","themeState","setThemeState","Provider","value","setItem","withTheme","ThemeProvider","props","menuVisible","setMenuVisible","themeToggle","useContext","id","to","location","pathname","window","reload","navHome","isLoggedIn","removeItem","Footer","Options","OptionPrivate","name","checked","handleOnChange","htmlFor","type","onChange","NewPost","getPosts","setTitle","setBody","setTags","setIsPrivate","handleInputChange","target","cols","rows","placeholder","tagsArray","split","saveNewPost","StatusMessage","message","animation","ErrorBoundary","state","errorInfo","this","fallback","Component","lazy","Home","_isMounted","_isLoggedIn","posts","setState","search","URL","href","searchParams","Object","keys","clearFilter","postId","EditPost","updatePost","toString","dateEdited","currentUser","updatedPost","saveEditedPost","delete","PostCollab","newCollaborator","setCollaborator","newCollaboratorData","collaboratorIndex","forEach","timeSince","seconds","Math","floor","interval","Comment","getPost","comment","setComment","comments","parentId","PostPage","editMode","collabMode","userCanEdit","addEventListener","updateCurrentUserOnExit","updateCurrentUser","toggleEditMode","toggleColabMode","cancel","PostCollabs","Login","email","setEmail","password","setPassword","errorMessage","setErrorMessage","onSubmit","fetch","method","headers","credentials","JSON","stringify","status","json","Error","autoComplete","Register","setUsername","event","User","user","setUser","emailEditMode","setEmailEditMode","usernameEditMode","setUsernameEditMode","passwordEditMode","setPasswordnameEditMode","useEffect","getUser","withCredentials","saveEditedUser","userField","usernameData","newUsername","updatePostsByUser","editUser","cancelEditUser","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7c513d9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport history from \"../history\";\r\nimport axios from \"axios\";\r\n\r\nconst Post = ({ post, setPosts }) => {\r\n  const [postFavs, setPostFavs] = useState(post.meta.favs);\r\n  const [postFavsUserIds, setPostFavsUserIds] = useState(post.meta.favsUserIds);\r\n\r\n  let favouritingPost = false;\r\n  let userId = sessionStorage.getItem(\"userId\");\r\n\r\n  const toggleFavourite = (e) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      console.error(\"You must be logged in to favoutie posts\");\r\n      return;\r\n    }\r\n\r\n    let favsUserIds = postFavsUserIds;\r\n    let favs = postFavs;\r\n\r\n    let userIdIndex = favsUserIds.indexOf(userId);\r\n    if (userIdIndex >= 0) {\r\n      // User has already favourited this post\r\n      favsUserIds.splice(userIdIndex, 1);\r\n      favs--;\r\n    } else {\r\n      // User has not already favourited this post\r\n      favsUserIds.push(userId);\r\n      favs++;\r\n    }\r\n\r\n    if (!favouritingPost) {\r\n      const data = {\r\n        meta: { favs, favsUserIds },\r\n      };\r\n      axios\r\n        .put(process.env.REACT_APP_BASE_URL + \"/api/home/\" + post._id, data)\r\n        .then((res) => {\r\n          setPostFavs(favs);\r\n          setPostFavsUserIds(favsUserIds);\r\n          favouritingPost = false;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error updating post: \" + err);\r\n          favouritingPost = false;\r\n        });\r\n    }\r\n    favouritingPost = true;\r\n  };\r\n\r\n  const handleFilterClick = (e, filter, filterType) => {\r\n    e.preventDefault();\r\n\r\n    let data;\r\n    switch (filterType) {\r\n      case \"tag\":\r\n        data = {\r\n          params: {\r\n            tag: filter,\r\n          },\r\n        };\r\n        break;\r\n      case \"username\":\r\n        data = {\r\n          params: {\r\n            username: filter,\r\n          },\r\n        };\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    axios\r\n      .get(process.env.REACT_APP_BASE_URL + \"/api/home/\", data)\r\n      .then((res) => {\r\n        history.push(\"/?\" + filterType + \"=\" + filter);\r\n        let postsReversed = res.data.reverse();\r\n        setPosts(postsReversed);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error getting posts by tag: \" + err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <article className=\"post\">\r\n      <h3>{post.title}</h3>\r\n      <p>{post.body}</p>\r\n      <hr className=\"divider\" />\r\n      {post.tags.length > 0 && (\r\n        <div className={\"tags\"}>\r\n          {post.tags.map((tag, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={(e) => handleFilterClick(e, tag, \"tag\")}\r\n            >\r\n              {\"# \" + tag}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"post__details\">\r\n        <div className=\"post__details-row\">\r\n          <label>\r\n            {post.collaborators.length > 0 ? \"Authors:\" : \"Author:\"}\r\n          </label>\r\n          <p className={\"authors\"}>\r\n            <button\r\n              onClick={(e) => handleFilterClick(e, post.username, \"username\")}\r\n            >\r\n              {post.username}\r\n            </button>\r\n            {post.collaborators.map((collaborator, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  onClick={(e) =>\r\n                    handleFilterClick(e, collaborator.username, \"username\")\r\n                  }\r\n                >\r\n                  {\", \" + collaborator.username}\r\n                </button>\r\n              );\r\n            })}\r\n          </p>\r\n        </div>\r\n        <div className=\"post__details-row\">\r\n          <label>Posted:</label>\r\n          <p>\r\n            {new Date(post.date).toLocaleString(\"en-GB\", {\r\n              day: \"2-digit\",\r\n              month: \"2-digit\",\r\n              year: \"numeric\",\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              timeZone: \"UTC\",\r\n            })}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"post__stats\">\r\n        {postFavsUserIds.includes(userId) ? (\r\n          <button onClick={toggleFavourite} aria-label=\"Unfavourite Post\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"black\"\r\n              width=\"18px\"\r\n              height=\"18px\"\r\n            >\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\r\n            </svg>\r\n          </button>\r\n        ) : (\r\n          <button onClick={toggleFavourite} aria-label=\"Favourite Post\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"black\"\r\n              width=\"18px\"\r\n              height=\"18px\"\r\n            >\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\" />\r\n            </svg>\r\n          </button>\r\n        )}\r\n        <p>{postFavs}</p>\r\n        {post.isPrivate && <p>Private</p>}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import theme from \"styled-theming\";\r\n\r\nexport const primaryBackgroundColor = theme(\"mode\", {\r\n  light: \"#ffffff\",\r\n  dark: \"#2c3e50\",\r\n});\r\n\r\nexport const secondaryBackgroundColor = theme(\"mode\", {\r\n  light: \"#e6eaf2\",\r\n  dark: \"#282c34\",\r\n});\r\n\r\nexport const inputBackgroundColor = theme(\"mode\", {\r\n  light: \"#e6eaf2\",\r\n  dark: \"#3c5168\",\r\n});\r\n\r\nexport const primaryTextColor = theme(\"mode\", {\r\n  light: \"#222222\",\r\n  dark: \"#ffffff\",\r\n});\r\n\r\nexport const secondaryTextColor = theme(\"mode\", {\r\n  light: \"rgb(153, 153, 153)\",\r\n  dark: \"rgba(255, 255, 255, 0.589)\",\r\n});\r\n\r\nexport const placeholderTextColor = theme(\"mode\", {\r\n  light: \"rgba(0, 0, 0, 0.8)\",\r\n  dark: \"rgba(255, 255, 255, 0.8)\",\r\n});\r\n\r\nexport const borderColor = theme(\"mode\", {\r\n  light: \"#222222\",\r\n  dark: \"#ffffff\",\r\n});\r\n\r\nexport const highlightColor = theme(\"mode\", {\r\n  light: \"#007bff\",\r\n  dark: \"#007bff\",\r\n});\r\n\r\nexport const cardShadow = theme(\"mode\", {\r\n  light: \"0 4px 4px 0 #c8ccd4, 0 6px 10px 0 #c8ccd4f6\",\r\n  dark: \"0 4px 4px 0 #282c34, 0 6px 10px 0 #282c34f6\",\r\n});\r\n\r\nexport const curvedCheckbox = theme(\"mode\", {\r\n  light: \"none\",\r\n  dark: \"inset 0px 0px 3px #2c3e50\",\r\n});\r\n","import React, { useState } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  primaryBackgroundColor,\r\n  secondaryBackgroundColor,\r\n  inputBackgroundColor,\r\n  primaryTextColor,\r\n  secondaryTextColor,\r\n  placeholderTextColor,\r\n  borderColor,\r\n  highlightColor,\r\n  cardShadow,\r\n  curvedCheckbox,\r\n} from \"./theme\";\r\n\r\nconst ThemeToggleContext = React.createContext({\r\n  toggle: () => {},\r\n});\r\n\r\nexport const useTheme = () => React.useContext(ThemeToggleContext);\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${primaryBackgroundColor};\r\n  color: ${primaryTextColor};\r\n  border-color: ${borderColor};\r\n  header,\r\n  footer {\r\n    background-color: ${secondaryBackgroundColor};\r\n  }\r\n  button {\r\n    color: ${primaryTextColor};\r\n    border-color: ${borderColor};\r\n    background: ${\"transparent\"};\r\n    &:hover {\r\n      color: ${primaryTextColor};\r\n      border-color: ${highlightColor};\r\n    }\r\n  }\r\n  a {\r\n    color: ${primaryTextColor};\r\n    &:hover {\r\n      color: ${primaryTextColor};\r\n      border-color: ${highlightColor};\r\n    }\r\n  }\r\n  textarea,\r\n  input {\r\n    color: ${primaryTextColor};\r\n    background-color: ${inputBackgroundColor};\r\n    ::placeholder {\r\n      color: ${placeholderTextColor};\r\n    }\r\n  }\r\n  svg {\r\n    fill: ${primaryTextColor};\r\n  }\r\n  .btn--minimal {\r\n    &:hover {\r\n      background: ${primaryBackgroundColor};\r\n    }\r\n  }\r\n  .post--summary {\r\n    &:hover {\r\n      border-color: ${\"transparent\"};\r\n      background-color: ${secondaryBackgroundColor};\r\n    }\r\n  }\r\n  .card {\r\n    background: ${\"transparent\"};\r\n    box-shadow: ${cardShadow};\r\n  }\r\n  .tags,\r\n  .post__details,\r\n  .post__stats {\r\n    color: ${secondaryTextColor};\r\n    p {\r\n      color: ${secondaryTextColor};\r\n    }\r\n    button {\r\n      color: ${secondaryTextColor};\r\n      border-color: ${secondaryTextColor};\r\n      &:hover {\r\n        color: ${primaryTextColor};\r\n        border-color: ${borderColor};\r\n      }\r\n      &:focus {\r\n        color: ${primaryTextColor};\r\n      }\r\n    }\r\n  }\r\n  .btn--red {\r\n    &:hover {\r\n      border-color: ${\"red\"};\r\n    }\r\n  }\r\n  .line1,\r\n  .line2,\r\n  .line3 {\r\n    background: ${primaryTextColor};\r\n  }\r\n  .user-options {\r\n    background-color: ${secondaryBackgroundColor};\r\n  }\r\n  .font--secondary-color {\r\n    color: ${secondaryTextColor};\r\n  }\r\n  #privacy-checkbox {\r\n    box-shadow: ${curvedCheckbox};\r\n  }\r\n`;\r\n\r\nexport const MyThemeProvider = ({ children }) => {\r\n  const storedMode = localStorage.getItem(\"mode\");\r\n\r\n  const [themeState, setThemeState] = useState({\r\n    mode: storedMode ? storedMode : \"dark\",\r\n  });\r\n\r\n  const toggle = () => {\r\n    const mode = themeState.mode === \"dark\" ? \"light\" : \"dark\";\r\n    localStorage.setItem(\"mode\", mode);\r\n    setThemeState({ mode });\r\n  };\r\n\r\n  return (\r\n    <ThemeToggleContext.Provider value={{ toggle: toggle }}>\r\n      <ThemeProvider theme={{ mode: themeState.mode }}>\r\n        <Wrapper>{children}</Wrapper>\r\n      </ThemeProvider>\r\n    </ThemeToggleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport history from \"../history\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../styles/ThemeContext\";\r\nimport { withTheme } from \"styled-components\";\r\n\r\nconst Header = (props) => {\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  const themeToggle = useTheme();\r\n\r\n  function onLogoutClick() {\r\n    sessionStorage.removeItem(\"username\");\r\n    sessionStorage.removeItem(\"userId\");\r\n    if (history.location.pathname === \"/\") {\r\n      window.location.reload();\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  const toggleMenu = () => {\r\n    if (menuVisible) setMenuVisible(false);\r\n    else setMenuVisible(true);\r\n  };\r\n\r\n  const navHome = (e) => {\r\n    if (history.location.pathname === \"/\") {\r\n      e.preventDefault();\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div id=\"top\">\r\n        <Link to=\"/\" onClick={(e) => navHome(e)}>\r\n          <h1>Poetical</h1>\r\n        </Link>\r\n        <div className=\"visible-top-options\">\r\n          {props.isLoggedIn ? (\r\n            <button\r\n              className={\"menu \" + (menuVisible && \"menu--active\")}\r\n              onClick={toggleMenu}\r\n              aria-label=\"Main menu\"\r\n            >\r\n              <div className=\"line1\"></div>\r\n              <div className=\"line2\"></div>\r\n              <div className=\"line3\"></div>\r\n            </button>\r\n          ) : (\r\n            <Link to=\"/login\" className=\"btn\">\r\n              Login\r\n            </Link>\r\n          )}\r\n          <button\r\n            aria-label=\"Change Theme\"\r\n            className=\"btn btn--minimal\"\r\n            onClick={() => themeToggle.toggle()}\r\n          >\r\n            {props.theme.mode === \"dark\" ? (\r\n              <svg\r\n                className=\"toggle-night\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"white\"\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n              >\r\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z\" />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                className=\"toggle-day\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"white\"\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n              >\r\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\" />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"top-options-wrapper\">\r\n        <nav\r\n          className={\"user-options \" + (menuVisible && \"user-options--active\")}\r\n        >\r\n          <button className=\"btn\" onClick={onLogoutClick}>\r\n            Logout\r\n          </button>\r\n          <Link\r\n            to={\"/user/\" + sessionStorage.getItem(\"userId\")}\r\n            className=\"btn\"\r\n          >\r\n            Settings\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default withTheme(Header);\r\n","import React from \"react\";\r\n\r\nconst Footer = ({ children }) => {\r\n  return <footer>{children}</footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Options = ({ children }) => {\r\n  return <div className=\"options\">{children}</div>;\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\n\r\nconst OptionPrivate = ({ name, checked, handleOnChange }) => {\r\n  return (\r\n    <div className=\"privacy\">\r\n      <label htmlFor=\"privacy-checkbox\"> Private: </label>\r\n      <input\r\n        id=\"privacy-checkbox\"\r\n        type=\"checkbox\"\r\n        name={name}\r\n        checked={checked}\r\n        onChange={handleOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionPrivate;\r\n","import React, { useState } from \"react\";\r\nimport Options from \"../components/Options\";\r\nimport OptionPrivate from \"../components/OptionPrivate\";\r\nimport axios from \"axios\";\r\n\r\nconst NewPost = ({ getPosts }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n\r\n  const saveNewPost = () => {\r\n    let tagsArray = [];\r\n    if (tags !== \"\") tagsArray = tags.split(\",\");\r\n    const data = {\r\n      title,\r\n      body,\r\n      username: sessionStorage.getItem(\"username\"),\r\n      userId: sessionStorage.getItem(\"userId\"),\r\n      tags: tagsArray,\r\n      isPrivate,\r\n    };\r\n    axios\r\n      .post(process.env.REACT_APP_BASE_URL + \"/api/home\", data)\r\n      .then((res) => {\r\n        setTitle(\"\");\r\n        setBody(\"\");\r\n        setTags(\"\");\r\n        setIsPrivate(false);\r\n        getPosts();\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error saving new post: \" + err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    switch (name) {\r\n      case \"title\":\r\n        setTitle(value);\r\n        break;\r\n      case \"body\":\r\n        setBody(value);\r\n        break;\r\n      case \"tags\":\r\n        setTags(value);\r\n        break;\r\n      case \"isPrivate\":\r\n        setIsPrivate(e.target.checked);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <p>\r\n        Hi <i>{sessionStorage.getItem(\"username\")}</i>, add your new post here:\r\n      </p>\r\n      <hr className=\"divider\" />\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        id=\"title\"\r\n        cols=\"50\"\r\n        rows=\"1\"\r\n        placeholder=\"Title...\"\r\n        value={title}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label htmlFor=\"content\">Content:</label>\r\n      <textarea\r\n        name=\"body\"\r\n        id=\"content\"\r\n        cols=\"50\"\r\n        rows=\"3\"\r\n        placeholder=\"Content...\"\r\n        value={body}\r\n        onChange={handleInputChange}\r\n      />\r\n      <hr className=\"divider\" />\r\n      <label htmlFor=\"tags\">Tags:</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"tags\"\r\n        id=\"tags\"\r\n        cols=\"50\"\r\n        rows=\"1\"\r\n        placeholder=\"Song, Rap, Poem, Haiku...\"\r\n        value={tags}\r\n        onChange={handleInputChange}\r\n      />\r\n      <Options>\r\n        <div className=\"options__left\">\r\n          <button className=\"btn\" onClick={() => saveNewPost()}>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <OptionPrivate\r\n          className=\"options__right\"\r\n          name=\"isPrivate\"\r\n          checked={isPrivate}\r\n          handleOnChange={handleInputChange}\r\n        />\r\n      </Options>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\n\r\nconst StatusMessage = ({ message, animation }) => {\r\n  return (\r\n    <section className={\"status-message \" + animation}>\r\n      <h2>{message}</h2>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default StatusMessage;\r\n","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Log or store the error\r\n    console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    return this.state.error ? this.props.fallback : this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport NewPost from \"../components/NewPost\";\r\nimport StatusMessage from \"../components/StatusMessage\";\r\nimport Options from \"../components/Options\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport axios from \"axios\";\r\n\r\nconst Post = lazy(() => import(\"../components/Post\"));\r\n\r\nclass Home extends Component {\r\n  _isMounted = false;\r\n  _isLoggedIn = sessionStorage.getItem(\"username\");\r\n  userId = sessionStorage.getItem(\"userId\");\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getPosts();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  getPosts() {\r\n    let data;\r\n    if (window.location.search) {\r\n      if (window.location.search.includes(\"tag\")) {\r\n        data = {\r\n          params: {\r\n            tag: new URL(window.location.href).searchParams.get(\"tag\"),\r\n          },\r\n        };\r\n      } else if (window.location.search.includes(\"username\")) {\r\n        data = {\r\n          params: {\r\n            username: new URL(window.location.href).searchParams.get(\r\n              \"username\"\r\n            ),\r\n          },\r\n        };\r\n      }\r\n    }\r\n\r\n    axios\r\n      .get(process.env.REACT_APP_BASE_URL + \"/api/home\", data)\r\n      .then((res) => {\r\n        if (this._isMounted) {\r\n          let postsReversed = res.data.reverse();\r\n          let numPosts = Object.keys(postsReversed).length;\r\n          numPosts > 0\r\n            ? this.setState({ posts: postsReversed })\r\n            : this.setState({ posts: \"Empty\" });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error from posts: \" + err);\r\n      });\r\n  }\r\n\r\n  setPosts = (posts) => {\r\n    this.setState({ posts });\r\n  };\r\n\r\n  clearFilter() {\r\n    history.push(\"/\");\r\n    this.getPosts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Header isLoggedIn={this._isLoggedIn} />\r\n        <main>\r\n          <section className=\"cards\">\r\n            {this._isLoggedIn ? (\r\n              <NewPost getPosts={() => this.getPosts()} />\r\n            ) : (\r\n              <div className=\"card card--intro\">\r\n                <h1>P</h1>\r\n                <h2>\r\n                  Poetical is a platform for collaborating on creative prose\r\n                </h2>\r\n                <p>\r\n                  Register to start posting or browse others creations below.\r\n                </p>\r\n                <Link to=\"/register\" className=\"btn\">\r\n                  Register\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </section>\r\n          {this.state.posts === null ? (\r\n            <StatusMessage\r\n              message={\"Loading Posts . . .\"}\r\n              animation={\"animate-flicker\"}\r\n            />\r\n          ) : this.state.posts === \"Empty\" ? (\r\n            <StatusMessage message={\"There are no posts\"} />\r\n          ) : (\r\n            <Suspense\r\n              fallback={\r\n                <StatusMessage\r\n                  message={\"Loading Posts . . .\"}\r\n                  animation={\"animate-flicker\"}\r\n                />\r\n              }\r\n            >\r\n              <ErrorBoundary\r\n                fallback={<StatusMessage message={\"Something went wrong\"} />}\r\n              >\r\n                <section className=\"cards\">\r\n                  {window.location.search && (\r\n                    <div className=\"card-width-wrapper\">\r\n                      <hr className=\"divider\" />\r\n                      <Options>\r\n                        <div className=\"options__left\">\r\n                          <h5>\r\n                            {window.location.search.includes(\"tag\")\r\n                              ? \"Showing posts tagged as: \" +\r\n                                new URL(window.location.href).searchParams.get(\r\n                                  \"tag\"\r\n                                )\r\n                              : \"Showing posts by: \" +\r\n                                new URL(window.location.href).searchParams.get(\r\n                                  \"username\"\r\n                                )}\r\n                          </h5>\r\n                        </div>\r\n                        <div className=\"options__right\">\r\n                          <button\r\n                            className=\"btn btn--red\"\r\n                            onClick={() => this.clearFilter()}\r\n                          >\r\n                            Clear\r\n                          </button>\r\n                        </div>\r\n                      </Options>\r\n                    </div>\r\n                  )}\r\n                  {this.state.posts.map(\r\n                    (post) =>\r\n                      (!post.isPrivate ||\r\n                        post.userId === this.userId ||\r\n                        post.collaborators.filter(\r\n                          (collaborator) => collaborator.id === this.userId\r\n                        ).length > 0) && (\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/post/${post._id}`,\r\n                            state: {\r\n                              postId: post._id,\r\n                            },\r\n                          }}\r\n                          className=\"card post--summary\"\r\n                          key={post._id}\r\n                          aria-label={post.title}\r\n                        >\r\n                          <Post post={post} setPosts={this.setPosts} />\r\n                        </Link>\r\n                      )\r\n                  )}\r\n                  <a href=\"#top\" aria-label=\"Go to top of page\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"white\"\r\n                      width=\"36px\"\r\n                      height=\"36px\"\r\n                    >\r\n                      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                      <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\r\n                    </svg>\r\n                  </a>\r\n                </section>\r\n              </ErrorBoundary>\r\n            </Suspense>\r\n          )}\r\n        </main>\r\n        {this.state.posts && (\r\n          <Footer>\r\n            <a href=\"https://github.com/ianbaxter/chat-wall\">View on GitHub</a>\r\n          </Footer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport history from \"../history\";\r\nimport Options from \"../components/Options\";\r\nimport OptionPrivate from \"../components/OptionPrivate\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPost = ({ post, updatePost }) => {\r\n  const [title, setTitle] = useState(post.title);\r\n  const [body, setBody] = useState(post.body);\r\n  const [tags, setTags] = useState(post.tags.toString());\r\n  const [isPrivate, setIsPrivate] = useState(post.isPrivate);\r\n\r\n  const deletePost = () => {\r\n    axios\r\n      .delete(process.env.REACT_APP_BASE_URL + \"/api/home/\" + post._id)\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error deleting post: \" + err);\r\n      });\r\n  };\r\n\r\n  const saveEditedPost = (dateEdited) => {\r\n    // Check if tags input field is empty\r\n    let tagsArray = tags === \"\" ? [] : tags.split(\",\");\r\n    const data = {\r\n      title,\r\n      body,\r\n      tags: tagsArray,\r\n      dateEdited: new Date(),\r\n      isPrivate,\r\n      currentUser: \"\",\r\n    };\r\n\r\n    axios\r\n      .put(process.env.REACT_APP_BASE_URL + \"/api/home/\" + post._id, data)\r\n      .then((res) => {\r\n        let updatedPost = post;\r\n        updatedPost.title = title;\r\n        updatedPost.body = body;\r\n        updatedPost.tags = tagsArray;\r\n        updatedPost.isPrivate = isPrivate;\r\n        updatedPost.currentUser = \"\";\r\n        updatePost(updatedPost);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error updating post: \" + err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    switch (name) {\r\n      case \"title\":\r\n        setTitle(value);\r\n        break;\r\n      case \"body\":\r\n        setBody(value);\r\n        break;\r\n      case \"tags\":\r\n        setTags(value);\r\n        break;\r\n      case \"isPrivate\":\r\n        setIsPrivate(e.target.checked);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        id=\"title\"\r\n        cols=\"50\"\r\n        rows=\"1\"\r\n        value={title}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label htmlFor=\"body\">Content:</label>\r\n      <textarea\r\n        name=\"body\"\r\n        id=\"body\"\r\n        cols=\"50\"\r\n        rows=\"3\"\r\n        value={body}\r\n        onChange={handleInputChange}\r\n      />\r\n      <hr className=\"divider\" />\r\n      <label htmlFor=\"tags\">Tags:</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"tags\"\r\n        id=\"tags\"\r\n        cols=\"50\"\r\n        rows=\"1\"\r\n        placeholder=\"Enter Tags\"\r\n        value={tags}\r\n        onChange={handleInputChange}\r\n      />\r\n      <div className=\"margin-bottom\">\r\n        <OptionPrivate\r\n          name=\"newIsPrivate\"\r\n          checked={isPrivate}\r\n          handleOnChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <Options>\r\n        <div className=\"options__left\">\r\n          <button className=\"btn\" onClick={() => saveEditedPost(post.date)}>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className=\"options__right\">\r\n          <button className=\"btn btn--red\" onClick={() => deletePost()}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Options>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Options from \"../components/Options\";\r\n\r\nconst PostCollab = ({ post }) => {\r\n  const [newCollaborator, setCollaborator] = useState(\"\");\r\n\r\n  const addCollaborator = () => {\r\n    if (newCollaborator === \"\") return;\r\n    if (newCollaborator === sessionStorage.getItem(\"username\"))\r\n      return console.error(\"Cannot add yourself as a collaborator\");\r\n\r\n    let collaborators = post.collaborators;\r\n\r\n    // Check if already a collaborator\r\n    if (\r\n      collaborators.length > 0 &&\r\n      collaborators.filter(\r\n        (collaborator) => collaborator.username === newCollaborator\r\n      ).length > 0\r\n    ) {\r\n      console.error(\"User is already a collaborator\");\r\n      return;\r\n    }\r\n\r\n    // Check if new collaborator is a user and if so return their ID\r\n    const data = { username: newCollaborator };\r\n    axios\r\n      .get(process.env.REACT_APP_BASE_URL + \"/api/users\", {\r\n        params: data,\r\n      })\r\n      .then((res) => {\r\n        const collaboratorId = res.data;\r\n        const newCollaboratorData = {\r\n          id: collaboratorId,\r\n          username: newCollaborator,\r\n        };\r\n        collaborators.push(newCollaboratorData);\r\n\r\n        const data = { collaborators };\r\n        axios\r\n          .put(process.env.REACT_APP_BASE_URL + \"/api/home/\" + post._id, data)\r\n          .then((res) => {\r\n            setCollaborator(\"\");\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error updating post: \" + err);\r\n          });\r\n      })\r\n      .catch((err) => console.error(\"This user does not exist: \" + err));\r\n  };\r\n\r\n  const removeCollaborator = () => {\r\n    if (newCollaborator === \"\") return;\r\n    let collaborators = post.collaborators;\r\n    let collaboratorIndex = -1;\r\n    collaborators.forEach((collaborator, index) => {\r\n      if (collaborator.username === newCollaborator) collaboratorIndex = index;\r\n    });\r\n\r\n    if (collaboratorIndex >= 0) {\r\n      collaborators.splice(collaboratorIndex, 1);\r\n\r\n      const data = { collaborators };\r\n      axios\r\n        .put(process.env.REACT_APP_BASE_URL + \"/api/home/\" + post._id, data)\r\n        .then((res) => {\r\n          setCollaborator(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error updating post: \" + err);\r\n        });\r\n    }\r\n    return;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setCollaborator(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div>\r\n        <h2>Collaborators:</h2>\r\n        <div>\r\n          {post.collaborators.length > 0 ? (\r\n            post.collaborators.map((collaborator) => (\r\n              <li key={collaborator.id}>{collaborator.username}</li>\r\n            ))\r\n          ) : (\r\n            <p className=\"font--secondary-color\">No Collaborators</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <hr className=\"divider\" />\r\n      <div>\r\n        <label htmlFor=\"collaborator\">Collaborator Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"collaborator\"\r\n          id=\"collaborator\"\r\n          cols=\"50\"\r\n          rows=\"1\"\r\n          placeholder=\"Username (case sensitive)\"\r\n          value={newCollaborator}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Options>\r\n          <div className=\"options__left\">\r\n            <button className=\"btn\" onClick={addCollaborator}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"options__right\">\r\n            <button className=\"btn btn--red\" onClick={removeCollaborator}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </Options>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCollab;\r\n","const timeSince = (date) => {\r\n  var seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n  var interval = Math.floor(seconds / 31536000);\r\n\r\n  if (interval > 1) {\r\n    return interval + \" years\";\r\n  }\r\n  interval = Math.floor(seconds / 2592000);\r\n  if (interval > 1) {\r\n    return interval + \" months\";\r\n  }\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval > 1) {\r\n    return interval + \" days\";\r\n  }\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval > 1) {\r\n    return interval + \" hours\";\r\n  }\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval > 1) {\r\n    return interval + \" minutes\";\r\n  }\r\n  return Math.floor(seconds) + \" seconds\";\r\n};\r\n\r\nexport default timeSince;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport timeSince from \"../utils/time\";\r\n\r\nconst Comment = ({ post, isLoggedIn, getPost }) => {\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const saveComment = () => {\r\n    if (comment === \"\") return;\r\n    const data = {\r\n      body: comment,\r\n      username: sessionStorage.getItem(\"username\"),\r\n      parentId: post._id,\r\n    };\r\n\r\n    axios\r\n      .post(process.env.REACT_APP_BASE_URL + \"/api/home/\" + post._id, data)\r\n      .then((res) => {\r\n        setComment(\"\");\r\n        getPost();\r\n      })\r\n      .catch((err) => console.error(\"Eror saving comment: \" + err));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setComment(value);\r\n  };\r\n\r\n  return (\r\n    <section className=\"card\">\r\n      <h5>Comments:</h5>\r\n      {post.comments.length === 0 ? (\r\n        <div>\r\n          <hr></hr>\r\n          <p className=\"font--secondary-color\">No comments</p>\r\n        </div>\r\n      ) : (\r\n        post.comments.reverse().map((comment) => (\r\n          <div key={comment._id}>\r\n            <hr></hr>\r\n            <p>{comment.body}</p>\r\n            <div className=\"post__details\">\r\n              <div className=\"post__details-row\">\r\n                <label>Author:</label>\r\n                <p>{comment.username}</p>\r\n              </div>\r\n              <div className=\"post__details-row\">\r\n                <label>Posted:</label>\r\n                <p>{timeSince(new Date(comment.date)) + \" ago\"}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <hr></hr>\r\n          <label htmlFor=\"comment\">New comment:</label>\r\n          <textarea\r\n            name=\"comment\"\r\n            id=\"comment\"\r\n            cols=\"50\"\r\n            rows=\"2\"\r\n            value={comment}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <button className=\"btn\" onClick={saveComment}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <hr></hr>\r\n          <Link to=\"/login\" className=\"btn btn--wide\">\r\n            Login to comment\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Post from \"../components/Post\";\r\nimport EditPost from \"../components/EditPost\";\r\nimport StatusMessage from \"../components/StatusMessage\";\r\nimport PostCollabs from \"../components/PostCollabs\";\r\nimport Options from \"../components/Options\";\r\nimport Comment from \"../components/Comment\";\r\n\r\nclass PostPage extends Component {\r\n  _isMounted = false;\r\n  _isLoggedIn = sessionStorage.getItem(\"username\");\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: null,\r\n      title: \"\",\r\n      body: \"\",\r\n      tags: [],\r\n      isPrivate: false,\r\n      editMode: false,\r\n      collabMode: false,\r\n      userCanEdit: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", (e) => {\r\n      this.updateCurrentUserOnExit();\r\n    });\r\n    this._isMounted = true;\r\n    this.getPost();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    this.updateCurrentUserOnExit();\r\n  }\r\n\r\n  updateCurrentUserOnExit() {\r\n    if (this.state.post && this._isLoggedIn === this.state.post.currentUser) {\r\n      const data = {\r\n        currentUser: \"\",\r\n      };\r\n      axios\r\n        .put(\r\n          process.env.REACT_APP_BASE_URL + \"/api/home/\" + this.state.post._id,\r\n          data\r\n        )\r\n        .catch((err) => {\r\n          console.error(\"Error updating post: \" + err);\r\n        });\r\n    }\r\n  }\r\n\r\n  getPost() {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_BASE_URL +\r\n          \"/api/home/\" +\r\n          this.props.location.state.postId\r\n      )\r\n      .then((res) => {\r\n        if (this._isMounted) {\r\n          let userCanEdit = false;\r\n          if (res.data.userId === sessionStorage.getItem(\"userId\"))\r\n            userCanEdit = true;\r\n          res.data.collaborators.forEach((collaborator) => {\r\n            if (collaborator.id === sessionStorage.getItem(\"userId\"))\r\n              userCanEdit = true;\r\n          });\r\n\r\n          this.setState({\r\n            post: res.data,\r\n            title: res.data.title,\r\n            body: res.data.body,\r\n            tags: res.data.tags,\r\n            isPrivate: res.data.isPrivate,\r\n            userCanEdit,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error getting post: \" + err));\r\n  }\r\n\r\n  toggleEditMode() {\r\n    if (!this.state.post.currentUser) {\r\n      this.updateCurrentUser(this._isLoggedIn, true);\r\n    }\r\n  }\r\n\r\n  updateCurrentUser(currentUser, editMode) {\r\n    const data = {\r\n      currentUser,\r\n    };\r\n    axios\r\n      .put(\r\n        process.env.REACT_APP_BASE_URL + \"/api/home/\" + this.state.post._id,\r\n        data\r\n      )\r\n      .then((res) => {\r\n        let updatedPost = this.state.post;\r\n        updatedPost.currentUser = currentUser;\r\n        this.setState({ post: updatedPost, editMode });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing editmode: \" + err);\r\n      });\r\n  }\r\n\r\n  updatePost = (updatedPost) => {\r\n    this.setState({ post: updatedPost, editMode: false });\r\n  };\r\n\r\n  toggleColabMode() {\r\n    this.setState({ collabMode: true });\r\n  }\r\n\r\n  cancel(mode) {\r\n    switch (mode) {\r\n      case \"edit\":\r\n        this.updateCurrentUser(\"\", false);\r\n        break;\r\n      case \"collab\":\r\n        this.setState({ collabMode: false });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Header isLoggedIn={this._isLoggedIn} />\r\n        {!this.state.editMode &&\r\n          !this.state.collabMode &&\r\n          (this.state.post === null ? (\r\n            <StatusMessage\r\n              message={\"Loading Post . . .\"}\r\n              animation={\"animate-flicker\"}\r\n            />\r\n          ) : (\r\n            <main className=\"cards\">\r\n              <div className=\"card\">\r\n                <Post post={this.state.post} />\r\n              </div>\r\n              {this.state.userCanEdit && (\r\n                <div className=\"card-width-wrapper margin-bottom\">\r\n                  {this.state.post.currentUser ? (\r\n                    <p className=\"font--secondary-color\">\r\n                      {\"Currently being edited by: \" +\r\n                        this.state.post.currentUser}\r\n                    </p>\r\n                  ) : (\r\n                    <Options>\r\n                      <div className=\"options__left\">\r\n                        <button\r\n                          className=\"btn small-screen-margin-bottom\"\r\n                          onClick={() => this.toggleEditMode()}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"options__right\">\r\n                        <button\r\n                          className=\"btn btn--wide\"\r\n                          onClick={() => this.toggleColabMode()}\r\n                        >\r\n                          Manage Collaborators\r\n                        </button>\r\n                      </div>\r\n                    </Options>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <Comment\r\n                post={this.state.post}\r\n                isLoggedIn={this._isLoggedIn}\r\n                getPost={() => this.getPost()}\r\n              />\r\n            </main>\r\n          ))}\r\n        {this.state.editMode && (\r\n          <main className=\"cards\">\r\n            <EditPost post={this.state.post} updatePost={this.updatePost} />\r\n            <div className=\"card-width-wrapper\">\r\n              <Options>\r\n                <button className=\"btn\" onClick={() => this.cancel(\"edit\")}>\r\n                  Cancel\r\n                </button>\r\n              </Options>\r\n            </div>\r\n          </main>\r\n        )}\r\n        {this.state.collabMode && (\r\n          <main className=\"cards\">\r\n            <PostCollabs post={this.state.post} />\r\n            <div className=\"card-width-wrapper\">\r\n              <Options>\r\n                <button className=\"btn \" onClick={() => this.cancel(\"collab\")}>\r\n                  Back\r\n                </button>\r\n              </Options>\r\n            </div>\r\n          </main>\r\n        )}\r\n        {this.state.post && <Footer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value, name } = e.target;\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") return;\r\n    fetch(process.env.REACT_APP_BASE_URL + \"/api/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        } else {\r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n      })\r\n      .then((data) => {\r\n        sessionStorage.setItem(\"username\", data.username);\r\n        sessionStorage.setItem(\"userId\", data.userId);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setErrorMessage(\"The user name or password provided is incorrect.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <main>\r\n        <section className=\"cards entry\">\r\n          <form onSubmit={onSubmit} className=\"card\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n              autoComplete=\"email\"\r\n            />\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <button className=\"btn btn--full-width\" type=\"submit\">\r\n              Login\r\n            </button>\r\n          </form>\r\n          <div className=\"entry__nav card-width-wrapper\">\r\n            <p className=\"font--secondary-color\">\r\n              Not yet registered? <Link to=\"/register\">Sign up</Link>\r\n            </p>\r\n            <p className=\"font--secondary-color\">{errorMessage}</p>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    const { value, name } = event.target;\r\n    switch (name) {\r\n      case \"username\":\r\n        setUsername(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (username === \"\" || email === \"\" || password === \"\") return;\r\n    fetch(process.env.REACT_APP_BASE_URL + \"/api/auth/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username, email, password }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        } else {\r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n      })\r\n      .then((data) => {\r\n        sessionStorage.setItem(\"username\", data.username);\r\n        sessionStorage.setItem(\"userId\", data.userId);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setErrorMessage(\r\n          \"Please check the username is at least 3 characters and the password is at least 6 characters.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <main>\r\n        <section className=\"cards entry\">\r\n          <form onSubmit={onSubmit} className=\"card\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={handleInputChange}\r\n              autoComplete=\"username\"\r\n            />\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n              autoComplete=\"email\"\r\n            />\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n              autoComplete=\"new-password\"\r\n            />\r\n            <button className=\"btn btn--full-width\" type=\"submit\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <div className=\"entry__nav card-width-wrapper\">\r\n            <p className=\"font--secondary-color\">\r\n              Already registered? <Link to=\"/login\">Login</Link>\r\n            </p>\r\n            <p className=\"font--secondary-color\">{errorMessage}</p>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Options from \"../components/Options\";\r\nimport axios from \"axios\";\r\n\r\nconst User = () => {\r\n  const [user, setUser] = useState();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailEditMode, setEmailEditMode] = useState(false);\r\n  const [usernameEditMode, setUsernameEditMode] = useState(false);\r\n  const [passwordEditMode, setPasswordnameEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const getUser = () => {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_BASE_URL +\r\n          \"/api/account/\" +\r\n          sessionStorage.getItem(\"userId\"),\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        setEmail(res.data.email);\r\n        setUsername(res.data.username);\r\n      })\r\n      .catch((err) => console.error(\"Error getting user: \" + err));\r\n  };\r\n\r\n  const saveEditedUser = (userField) => {\r\n    let data = {};\r\n    switch (userField) {\r\n      case \"email\":\r\n        data = { email };\r\n        axios\r\n          .put(\r\n            process.env.REACT_APP_BASE_URL +\r\n              \"/api/account/\" +\r\n              sessionStorage.getItem(\"userId\"),\r\n            data,\r\n            { withCredentials: true }\r\n          )\r\n          .then((res) => {\r\n            setUser(res.data);\r\n            setEmailEditMode(false);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error updating user: \" + err);\r\n          });\r\n        break;\r\n      case \"username\":\r\n        data = { username };\r\n        axios\r\n          .put(\r\n            process.env.REACT_APP_BASE_URL +\r\n              \"/api/account/\" +\r\n              sessionStorage.getItem(\"userId\"),\r\n            data,\r\n            { withCredentials: true }\r\n          )\r\n          .then((res) => {\r\n            updatePostsByUser(user, username);\r\n            sessionStorage.setItem(\"username\", username);\r\n            setUser(res.data);\r\n            setUsernameEditMode(false);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error updating user: \" + err);\r\n          });\r\n        break;\r\n      case \"password\":\r\n        data = { password };\r\n        axios\r\n          .put(\r\n            process.env.REACT_APP_BASE_URL +\r\n              \"/api/account/\" +\r\n              sessionStorage.getItem(\"userId\"),\r\n            data,\r\n            { withCredentials: true }\r\n          )\r\n          .then((res) => {\r\n            setUser(res.data);\r\n            setPasswordnameEditMode(false);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error updating user: \" + err);\r\n          });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const editUser = (userField) => {\r\n    switch (userField) {\r\n      case \"email\":\r\n        setEmailEditMode(true);\r\n        break;\r\n      case \"username\":\r\n        setUsernameEditMode(true);\r\n        break;\r\n      case \"password\":\r\n        setPasswordnameEditMode(true);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const cancelEditUser = (userField) => {\r\n    switch (userField) {\r\n      case \"email\":\r\n        setEmail(user.email);\r\n        setEmailEditMode(false);\r\n        break;\r\n      case \"username\":\r\n        setUsername(user.username);\r\n        setUsernameEditMode(false);\r\n        break;\r\n      case \"password\":\r\n        setPassword(\"\");\r\n        setPasswordnameEditMode(false);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"username\":\r\n        setUsername(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header isLoggedIn={sessionStorage.getItem(\"username\")} />\r\n      <main className=\"cards\">\r\n        <div className=\"card\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          {emailEditMode ? (\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"New Email\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n              />\r\n              <div className=\"margin-bottom\">\r\n                <Options>\r\n                  <div className=\"options__left\">\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => saveEditedUser(\"email\")}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"options__right\">\r\n                    <button\r\n                      className=\"btn btn--red\"\r\n                      onClick={() => cancelEditUser(\"email\")}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </Options>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p>{email}</p>\r\n              <div className=\"margin-bottom\">\r\n                <Options>\r\n                  <div className=\"options__left\">\r\n                    <button className=\"btn\" onClick={() => editUser(\"email\")}>\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </Options>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <hr className=\"divider\" />\r\n          <label htmlFor=\"username\">Username:</label>\r\n          {usernameEditMode ? (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                placeholder=\"New Username\"\r\n                cols=\"50\"\r\n                rows=\"1\"\r\n                value={username}\r\n                onChange={handleInputChange}\r\n              />\r\n              <div className=\"margin-bottom\">\r\n                <Options>\r\n                  <div className=\"options__left\">\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => saveEditedUser(\"username\")}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"options__right\">\r\n                    <button\r\n                      className=\"btn btn--red\"\r\n                      onClick={() => cancelEditUser(\"username\")}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </Options>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p>{username}</p>\r\n              <div className=\"margin-bottom\">\r\n                <Options>\r\n                  <div className=\"options__left\">\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => editUser(\"username\")}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </Options>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <hr className=\"divider\" />\r\n          {passwordEditMode ? (\r\n            <div>\r\n              <label htmlFor=\"password\">New Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"New Password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n              />\r\n              <Options>\r\n                <div className=\"options__left\">\r\n                  <button\r\n                    className=\"btn\"\r\n                    onClick={() => saveEditedUser(\"password\")}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n                <div className=\"options__right\">\r\n                  <button\r\n                    className=\"btn btn--red\"\r\n                    onClick={() => cancelEditUser(\"password\")}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </Options>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Options name=\"password\">\r\n                <div className=\"options__left\">\r\n                  <button\r\n                    className=\"btn btn--wide\"\r\n                    onClick={() => editUser(\"password\")}\r\n                  >\r\n                    Change Password\r\n                  </button>\r\n                </div>\r\n              </Options>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\nfunction updatePostsByUser(user, username) {\r\n  const usernameData = {\r\n    username: user.username,\r\n    newUsername: username,\r\n  };\r\n  axios\r\n    .put(process.env.REACT_APP_BASE_URL + \"/api/account/\", usernameData, {\r\n      withCredentials: true,\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error updating user: \" + err);\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport \"./styles/App.css\";\r\nimport history from \"./history\";\r\nimport Home from \"./pages/Home\";\r\nimport PostPage from \"./pages/PostPage\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport User from \"./pages/User\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n      <div className=\"app\">\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/post/:id\" component={PostPage} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route path=\"/user/:id\" component={User} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { MyThemeProvider } from \"./styles/ThemeContext\";\r\n\r\nReactDOM.render(\r\n  <MyThemeProvider>\r\n    <App />\r\n  </MyThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}